services:
  app:
    build:
      context: .
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - my_media:/files/media
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db

  db:
    image: postgres:16.0-alpine
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - my_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  celery:
    build:
      context: .
    container_name: celery
    command: celery -A auction_service worker --loglevel=info
    depends_on:
      - redis
    env_file:
      - .env
    volumes:
      - .:/app

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  scheduler:
    build:
      context: .
    container_name: scheduler
    command: python manage.py run_scheduler
    depends_on:
      - redis
      - db
    env_file:
      - .env
    volumes:
      - .:/app

volumes:
  my_db:
  my_media:
